shiny::runApp()
runApp()
size.ci.cor(.05, .362, 0, .25)
ASS(.05, .362, 0, .25)
ASS = function(alpha, cor, s, w){
z <- qnorm(1 - alpha/2)
n1 <- ceiling(4*(1 - cor^2)^2*(z/w)^2 + s + 3)
zr <- log((1 + cor)/(1 - cor))/2
se <- sqrt(1/(n1 - s - 3))
ll0 <- zr - z*se
ul0 <- zr + z*se
ll <- (exp(2*ll0) - 1)/(exp(2*ll0) + 1)
ul <- (exp(2*ul0) - 1)/(exp(2*ul0) + 1)
n <- ceiling((n1 - s - 3)*((ul - ll)/w)^2 + 3 + s)
return(n)
}
ASS(.05, .362, 0, .25)
shinyServer(
function(input, output) {
output$estimation <- renderText({ASS(input$alpha, input$cor, input$s, input$w)})
}
runApp()
runApp()
View(ASS)
View(ASS)
View(ASS)
ASS = function(k,ICC,width){
return(ceiling(((8 * (1.96^2) * (1-ICC)^2) * ((1+(k-1)*ICC) * (1+(k-1)*ICC))) / (k*(k-1)* ((width^2))) + 1))
}
size.ci.cor <- function(alpha, cor, s, w){
z <- qnorm(1 - alpha/2)
n1 <- ceiling(4*(1 - cor^2)^2*(z/w)^2 + s + 3)
zr <- log((1 + cor)/(1 - cor))/2
se <- sqrt(1/(n1 - s - 3))
ll0 <- zr - z*se
ul0 <- zr + z*se
ll <- (exp(2*ll0) - 1)/(exp(2*ll0) + 1)
ul <- (exp(2*ul0) - 1)/(exp(2*ul0) + 1)
n <- ceiling((n1 - s - 3)*((ul - ll)/w)^2 + 3 + s)
return(n)
}
runApp()
runApp()
runApp('C:/R scripts/Sample_size_ICC_Bonnet_2002/shinyapp')
# This is the back end file.
size.ci.cor = function(alpha, cor, s, w){
z = qnorm(1 - alpha/2)
n1 = ceiling(4*(1 - cor^2)^2*(z/w)^2 + s + 3)
zr = log((1 + cor)/(1 - cor))/2
se = sqrt(1/(n1 - s - 3))
ll0 = zr - z*se
ul0 = zr + z*se
ll = (exp(2*ll0) - 1)/(exp(2*ll0) + 1)
ul = (exp(2*ul0) - 1)/(exp(2*ul0) + 1)
n = ceiling((n1 - s - 3)*((ul - ll)/w)^2 + 3 + s)
return(n)
}
size.ci.cor(.05, .362, 0, .25)
# This is the front end file.
shinyUI(pageWithSidebar(
headerPanel(" Required sample size to estimate a (partial) Pearson correlation with desired precision"),
sidebarPanel(
numericInput('alpha', 'alpha value for 1-alpha confidence', 0.05, min = 0, max = 1, step = 0.01),
numericInput('corr', 'planning value of (partial) correlation', 0.80, min = 0, max = 1, step = 0.01),
numericInput('s', 'number of control variables', 0, min = 0, max = 999, step = 1),
numericInput('w', 'desired confidence interval width', 0.2, min = 0, max = 1, step = 0.01)
),
mainPanel(
verbatimTextOutput("obeta"),
h4('Required sample size (n):'),
verbatimTextOutput("estimation"),
h6('Approximate number of subjects required to obtain an exact 95% confidence interval of
the desired width for an intraclass correlation coefficient (ICC) in one-way and two-way
ANOVA models. Alpha fixed at 0.05 and Beta (1 - Power) at 0.20.'),
br(),
h6('Can be used to estimate the required approximate sample size (n) for (inter-rater
or test-retest) reliability studies. For example: for a reliability study with two
raters (or two repeated measurements) and an expected ICC value of 0.8, 51 subjects
are needed to obtain a desired width of 0.2 for the 95% confidence interval
(i.e., the value of ICC is between 0.7 and 0.9).'),
h6(em('Note: for k = 2 and ICCs >= 0.7, the approximate sample size tends to slighlty
diverge from the correct sample size (nc). In these special cases the accuracy can be
considerably improved by adding (5 * ICC) to the approximate sample size. In the
example above: nc = 51 + (5 * 0.8) = 55.')),
br(),
h5('Reference:'),
h6('Bonett DG, Wright TA. Sample size requirements for estimating Pearson, Kendall and Spearman correlations. Psychometrika. 2000;65(1):23â8.')
)
))
# This is the back end file.
size.ci.cor = function(alpha, cor, s, w){
z = qnorm(1 - alpha/2)
n1 = ceiling(4*(1 - cor^2)^2*(z/w)^2 + s + 3)
zr = log((1 + cor)/(1 - cor))/2
se = sqrt(1/(n1 - s - 3))
ll0 = zr - z*se
ul0 = zr + z*se
ll = (exp(2*ll0) - 1)/(exp(2*ll0) + 1)
ul = (exp(2*ul0) - 1)/(exp(2*ul0) + 1)
n = ceiling((n1 - s - 3)*((ul - ll)/w)^2 + 3 + s)
return(n)
}
size.ci.cor(.05, .362, 0, .25)
shinyServer(
function(input, output) {
output$estimation <- renderText({size.ci.cor(input$alpha, input$cor, input$s, input$w)})
}
)
View(size.ci.cor)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
size.ci.cor(.05, .362, 0, .25)
size.ci.cor(.05, .362, 0, .25)
shinyServer(
function(input, output) {
output$estimation <- renderText({size.ci.cor(input$k, input$ICC, input$width, 0.1)})
}
runApp()
runApp()
## Sample size to estimate a (partial) correlation
size.ci.cor <- function(alpha, cor, s, w) {
# Computes sample size required to estimate a (partial) correlation
# with desired precision
# Arguments:
#   alpha: alpha value for 1-alpha confidence
#   cor:   planning value of (partial) correlation
#   s:     number of control variables
#   w:     desired confidence interval width
# Returns:
#   required sample size
z <- qnorm(1 - alpha/2)
n1 <- ceiling(4*(1 - cor^2)^2*(z/w)^2 + s + 3)
zr <- log((1 + cor)/(1 - cor))/2
se <- sqrt(1/(n1 - s - 3))
ll0 <- zr - z*se
ul0 <- zr + z*se
ll <- (exp(2*ll0) - 1)/(exp(2*ll0) + 1)
ul <- (exp(2*ul0) - 1)/(exp(2*ul0) + 1)
n <- ceiling((n1 - s - 3)*((ul - ll)/w)^2 + 3 + s)
return(n)
}
# Example:
size.ci.cor(0.05, .80, 0, 0.20)
size.ci.cor(.05, .362, 0, .25)
size.ci.cor(input$k, input$ICC, input$width, 0.1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
